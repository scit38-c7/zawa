<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sesoc.report.dao.PostListMapper">
	<!-- 페이징 -->
	<select id="getTotal" parameterType="map" resultType="int">
		select 
			count(*)
		from
			reportpost
		where
			<choose>
				<when test="searchItem == 'title'">title</when>
				<when test="searchItem == 'user_id'">user_id</when>
				<when test="searchItem == 'content'">content</when>
			</choose>
			like '%'||#{searchKeyword}||'%'
	</select>

	<!-- 게시글 목록 -->
	<select id="PostList" resultType="PostVO" parameterType="map">
		select
			*
		from
			reportpost
		where
			<choose>
				<when test="searchItem == 'title'">title</when>
				<when test="searchItem == 'user_id'">user_id</when>
				<when test="searchItem == 'content'">content</when>
			</choose>
			like '%'||#{searchKeyword}||'%'
		order by
			post_no desc
	</select>
	
	<!-- 게시글 등록 -->
	<insert id="postWrite" parameterType="PostVO">
		insert into
			reportpost
		values(
			post_seq.nextval,
			#{user_id},
			#{title},
			#{content},
			sysdate,
			0,
			0,
			<choose>
				<when test="originalFilename != null and savedFilename != null">
					#{originalFilename}, #{savedFilename}
				</when>
				<otherwise>
					null, null
				</otherwise>
			</choose>
		)
	</insert>
	
	<!-- 게시글 읽기 -->
	<select id="postRead" parameterType="int" resultType="PostVO">
		select * from reportpost where post_no = #{post_no}
	</select>
	
	<!-- 게시글 조회수 높은 글 읽기 -->
	<select id="hitRead" resultType="PostVO">
		SELECT * FROM reportpost WHERE hit = (SELECT max(hit) FROM reportpost)
	</select>
	
		<!-- 게시글 조회수 높은 글 번호 찾기 -->
	<select id="hitPost_no" resultType="int">
		SELECT post_no FROM reportpost WHERE hit = (SELECT max(hit) FROM reportpost)
	</select>
	
	<!-- 조회수 올리기 -->
	<update id="hitCount" parameterType="int">
		UPDATE
	        reportpost
	    SET
	        hit = hit +1
	    WHERE
	        post_no = #{post_no}
	</update>
	
	<!-- 게시글 삭제 -->
	<delete id="postDelete" parameterType="PostVO">
		delete
			reportpost
		where
			post_no = #{post_no} and
			user_id = #{user_id}
	</delete>
	
	<!-- 게시글 수정 -->
	<update id="postUpdate" parameterType="PostVO">
		UPDATE
	        reportpost
	    SET
	        title = #{title},
	        content = #{content},
	        <choose>
	        	<when test="originalFilename != null and savedFilename != null">
	        		originalFilename = #{originalFilename},
	        		savedFilename = #{savedFilename}
	        	</when>
	        </choose>
	    WHERE
	        post_no = #{post_no} and user_id = #{user_id}
	</update>
	
	<!-- 태그검색 읽기 -->
	<select id="tagSearch" parameterType="String" resultType="PostVO">
		select
		 *
		from
		 reportpost_tag 
		where
		 tag_id = (select tag_id from tag where tag_name = #{tag_name})
	</select>
	
	<!-- 태그 읽기 -->
	<select id="tagRead" parameterType="PostVO" resultType="PostVO">
		select * from reportpost where post_no = #{post_no}
	</select>
	
	<!-- 태그검사 -->
	<select id="checkTag" parameterType="String" resultType="tagVO">
		SELECT
			*
		FROM
			tag
		WHERE
			tag_name = #{tag_name}
	</select>
	
	<!-- 태그테이블에 태그넣기 -->
	<insert id="insertTag" parameterType="String">
		INSERT INTO
			tag VALUES(
				tag_seq.nextval
				,#{tag_name}
			)
	</insert>
	
	<!-- 포스트태그테이블에 참조하는 데이터 넣기 -->
	<insert id="insertPostTag" parameterType="ptVO">
		INSERT INTO
			reportpost_tag VALUES(
				#{tag_id}
				,#{post_no}
			)
	</insert>
	
	<!-- 포스트태그테이블의 포스트넘버 찾기 -->
	<select id="getPost_no" resultType="int">
		select
			max(post_no)
		from
			(SELECT
				post_no
			FROM
				reportpost
			)
	</select>
	
	<!-- 포스트넘버 찾기 -->
	<select id="getTag" parameterType="int" resultType="tagVO">
		select
			tag_name
		from 
			tag
		where
			tag_id in (SELECT tag_id FROM reportpost_tag WHERE post_no = #{post_no})
	</select>
	
	<!-- 좋아요 -->
	<update id="like_check" parameterType="HashMap">
		update tolike
		set like_check = like_check + 1
		where user_id = #{user_id} and post_no = #{post_no}
	</update>
	
	<!-- 좋아요 취소 -->
	<update id="like_check_cancel" parameterType="HashMap">
    UPDATE tolike
    SET like_check = 0
    WHERE user_id = #{user_id} and post_no = #{post_no}
    </update>

</mapper>
